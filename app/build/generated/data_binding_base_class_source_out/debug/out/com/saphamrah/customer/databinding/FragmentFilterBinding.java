// Generated by view binder compiler. Do not edit!
package com.saphamrah.customer.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.saphamrah.customer.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentFilterBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final TextView BTNCancel;

  @NonNull
  public final TextView BTNConfirm;

  @NonNull
  public final RecyclerView RecyclerFilterSortChoice;

  @NonNull
  public final TextView TVFilterAndSortTitle;

  private FragmentFilterBinding(@NonNull FrameLayout rootView, @NonNull TextView BTNCancel,
      @NonNull TextView BTNConfirm, @NonNull RecyclerView RecyclerFilterSortChoice,
      @NonNull TextView TVFilterAndSortTitle) {
    this.rootView = rootView;
    this.BTNCancel = BTNCancel;
    this.BTNConfirm = BTNConfirm;
    this.RecyclerFilterSortChoice = RecyclerFilterSortChoice;
    this.TVFilterAndSortTitle = TVFilterAndSortTitle;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentFilterBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentFilterBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_filter, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentFilterBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.BTN_Cancel;
      TextView BTNCancel = ViewBindings.findChildViewById(rootView, id);
      if (BTNCancel == null) {
        break missingId;
      }

      id = R.id.BTN_Confirm;
      TextView BTNConfirm = ViewBindings.findChildViewById(rootView, id);
      if (BTNConfirm == null) {
        break missingId;
      }

      id = R.id.Recycler_filter_sort_choice;
      RecyclerView RecyclerFilterSortChoice = ViewBindings.findChildViewById(rootView, id);
      if (RecyclerFilterSortChoice == null) {
        break missingId;
      }

      id = R.id.TV_filterAndSort_title;
      TextView TVFilterAndSortTitle = ViewBindings.findChildViewById(rootView, id);
      if (TVFilterAndSortTitle == null) {
        break missingId;
      }

      return new FragmentFilterBinding((FrameLayout) rootView, BTNCancel, BTNConfirm,
          RecyclerFilterSortChoice, TVFilterAndSortTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
