// Generated by view binder compiler. Do not edit!
package com.saphamrah.customer.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.textfield.TextInputLayout;
import com.saphamrah.customer.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class SelectableBonusBottomSheetBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final ImageView arrowDownBottomSheet;

  @NonNull
  public final LinearLayout layDetails;

  @NonNull
  public final FrameLayout linBottomSheet;

  @NonNull
  public final LinearLayout linConfirm;

  @NonNull
  public final ImageView lottieLoadingPayment;

  @NonNull
  public final EditText tvBonusAmount;

  @NonNull
  public final Spinner tvBonusDescription;

  @NonNull
  public final EditText tvDiscount;

  @NonNull
  public final EditText tvMaxBonus;

  @NonNull
  public final TextView tvPayment;

  @NonNull
  public final EditText tvRemain;

  @NonNull
  public final TextInputLayout txtinputMablaghJayezeh;

  @NonNull
  public final TextInputLayout txtinputMandeh;

  @NonNull
  public final TextInputLayout txtinputMaxTedadJayezeh;

  @NonNull
  public final TextInputLayout txtinputTakhfifFaktor;

  private SelectableBonusBottomSheetBinding(@NonNull FrameLayout rootView,
      @NonNull ImageView arrowDownBottomSheet, @NonNull LinearLayout layDetails,
      @NonNull FrameLayout linBottomSheet, @NonNull LinearLayout linConfirm,
      @NonNull ImageView lottieLoadingPayment, @NonNull EditText tvBonusAmount,
      @NonNull Spinner tvBonusDescription, @NonNull EditText tvDiscount,
      @NonNull EditText tvMaxBonus, @NonNull TextView tvPayment, @NonNull EditText tvRemain,
      @NonNull TextInputLayout txtinputMablaghJayezeh, @NonNull TextInputLayout txtinputMandeh,
      @NonNull TextInputLayout txtinputMaxTedadJayezeh,
      @NonNull TextInputLayout txtinputTakhfifFaktor) {
    this.rootView = rootView;
    this.arrowDownBottomSheet = arrowDownBottomSheet;
    this.layDetails = layDetails;
    this.linBottomSheet = linBottomSheet;
    this.linConfirm = linConfirm;
    this.lottieLoadingPayment = lottieLoadingPayment;
    this.tvBonusAmount = tvBonusAmount;
    this.tvBonusDescription = tvBonusDescription;
    this.tvDiscount = tvDiscount;
    this.tvMaxBonus = tvMaxBonus;
    this.tvPayment = tvPayment;
    this.tvRemain = tvRemain;
    this.txtinputMablaghJayezeh = txtinputMablaghJayezeh;
    this.txtinputMandeh = txtinputMandeh;
    this.txtinputMaxTedadJayezeh = txtinputMaxTedadJayezeh;
    this.txtinputTakhfifFaktor = txtinputTakhfifFaktor;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static SelectableBonusBottomSheetBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static SelectableBonusBottomSheetBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.selectable_bonus_bottom_sheet, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static SelectableBonusBottomSheetBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.arrow_down_bottom_sheet;
      ImageView arrowDownBottomSheet = ViewBindings.findChildViewById(rootView, id);
      if (arrowDownBottomSheet == null) {
        break missingId;
      }

      id = R.id.layDetails;
      LinearLayout layDetails = ViewBindings.findChildViewById(rootView, id);
      if (layDetails == null) {
        break missingId;
      }

      FrameLayout linBottomSheet = (FrameLayout) rootView;

      id = R.id.lin_confirm;
      LinearLayout linConfirm = ViewBindings.findChildViewById(rootView, id);
      if (linConfirm == null) {
        break missingId;
      }

      id = R.id.lottie_loading_payment;
      ImageView lottieLoadingPayment = ViewBindings.findChildViewById(rootView, id);
      if (lottieLoadingPayment == null) {
        break missingId;
      }

      id = R.id.tv_bonus_amount;
      EditText tvBonusAmount = ViewBindings.findChildViewById(rootView, id);
      if (tvBonusAmount == null) {
        break missingId;
      }

      id = R.id.tv_bonus_description;
      Spinner tvBonusDescription = ViewBindings.findChildViewById(rootView, id);
      if (tvBonusDescription == null) {
        break missingId;
      }

      id = R.id.tv_discount;
      EditText tvDiscount = ViewBindings.findChildViewById(rootView, id);
      if (tvDiscount == null) {
        break missingId;
      }

      id = R.id.tv_max_bonus;
      EditText tvMaxBonus = ViewBindings.findChildViewById(rootView, id);
      if (tvMaxBonus == null) {
        break missingId;
      }

      id = R.id.tv_payment;
      TextView tvPayment = ViewBindings.findChildViewById(rootView, id);
      if (tvPayment == null) {
        break missingId;
      }

      id = R.id.tv_remain;
      EditText tvRemain = ViewBindings.findChildViewById(rootView, id);
      if (tvRemain == null) {
        break missingId;
      }

      id = R.id.txtinputMablaghJayezeh;
      TextInputLayout txtinputMablaghJayezeh = ViewBindings.findChildViewById(rootView, id);
      if (txtinputMablaghJayezeh == null) {
        break missingId;
      }

      id = R.id.txtinputMandeh;
      TextInputLayout txtinputMandeh = ViewBindings.findChildViewById(rootView, id);
      if (txtinputMandeh == null) {
        break missingId;
      }

      id = R.id.txtinputMaxTedadJayezeh;
      TextInputLayout txtinputMaxTedadJayezeh = ViewBindings.findChildViewById(rootView, id);
      if (txtinputMaxTedadJayezeh == null) {
        break missingId;
      }

      id = R.id.txtinputTakhfifFaktor;
      TextInputLayout txtinputTakhfifFaktor = ViewBindings.findChildViewById(rootView, id);
      if (txtinputTakhfifFaktor == null) {
        break missingId;
      }

      return new SelectableBonusBottomSheetBinding((FrameLayout) rootView, arrowDownBottomSheet,
          layDetails, linBottomSheet, linConfirm, lottieLoadingPayment, tvBonusAmount,
          tvBonusDescription, tvDiscount, tvMaxBonus, tvPayment, tvRemain, txtinputMablaghJayezeh,
          txtinputMandeh, txtinputMaxTedadJayezeh, txtinputTakhfifFaktor);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
