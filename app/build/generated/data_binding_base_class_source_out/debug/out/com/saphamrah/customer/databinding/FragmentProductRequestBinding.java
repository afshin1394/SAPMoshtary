// Generated by view binder compiler. Do not edit!
package com.saphamrah.customer.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.saphamrah.customer.R;
import com.saphamrah.customer.utils.customViews.SearchWatcher;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentProductRequestBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final RecyclerView RecyclerFilterList;

  @NonNull
  public final RecyclerView RecyclerProduct;

  @NonNull
  public final LinearLayout linFilter;

  @NonNull
  public final LinearLayout linSort;

  @NonNull
  public final LinearLayout mainView;

  @NonNull
  public final SearchWatcher searchView;

  @NonNull
  public final Toolbar toolbar;

  @NonNull
  public final TextView txtProducts;

  private FragmentProductRequestBinding(@NonNull FrameLayout rootView,
      @NonNull RecyclerView RecyclerFilterList, @NonNull RecyclerView RecyclerProduct,
      @NonNull LinearLayout linFilter, @NonNull LinearLayout linSort,
      @NonNull LinearLayout mainView, @NonNull SearchWatcher searchView, @NonNull Toolbar toolbar,
      @NonNull TextView txtProducts) {
    this.rootView = rootView;
    this.RecyclerFilterList = RecyclerFilterList;
    this.RecyclerProduct = RecyclerProduct;
    this.linFilter = linFilter;
    this.linSort = linSort;
    this.mainView = mainView;
    this.searchView = searchView;
    this.toolbar = toolbar;
    this.txtProducts = txtProducts;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentProductRequestBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentProductRequestBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_product_request, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentProductRequestBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.Recycler_filter_list;
      RecyclerView RecyclerFilterList = ViewBindings.findChildViewById(rootView, id);
      if (RecyclerFilterList == null) {
        break missingId;
      }

      id = R.id.Recycler_product;
      RecyclerView RecyclerProduct = ViewBindings.findChildViewById(rootView, id);
      if (RecyclerProduct == null) {
        break missingId;
      }

      id = R.id.lin_filter;
      LinearLayout linFilter = ViewBindings.findChildViewById(rootView, id);
      if (linFilter == null) {
        break missingId;
      }

      id = R.id.lin_sort;
      LinearLayout linSort = ViewBindings.findChildViewById(rootView, id);
      if (linSort == null) {
        break missingId;
      }

      id = R.id.mainView;
      LinearLayout mainView = ViewBindings.findChildViewById(rootView, id);
      if (mainView == null) {
        break missingId;
      }

      id = R.id.searchView;
      SearchWatcher searchView = ViewBindings.findChildViewById(rootView, id);
      if (searchView == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      id = R.id.txt_products;
      TextView txtProducts = ViewBindings.findChildViewById(rootView, id);
      if (txtProducts == null) {
        break missingId;
      }

      return new FragmentProductRequestBinding((FrameLayout) rootView, RecyclerFilterList,
          RecyclerProduct, linFilter, linSort, mainView, searchView, toolbar, txtProducts);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
