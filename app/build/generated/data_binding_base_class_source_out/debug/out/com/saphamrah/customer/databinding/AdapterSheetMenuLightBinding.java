// Generated by view binder compiler. Do not edit!
package com.saphamrah.customer.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.saphamrah.customer.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class AdapterSheetMenuLightBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageView imgSheetMenu;

  @NonNull
  public final LinearLayout llAdapterSheetMenu;

  @NonNull
  public final LinearLayout rootSheetMain;

  @NonNull
  public final TextView textSheetMenu;

  private AdapterSheetMenuLightBinding(@NonNull LinearLayout rootView,
      @NonNull ImageView imgSheetMenu, @NonNull LinearLayout llAdapterSheetMenu,
      @NonNull LinearLayout rootSheetMain, @NonNull TextView textSheetMenu) {
    this.rootView = rootView;
    this.imgSheetMenu = imgSheetMenu;
    this.llAdapterSheetMenu = llAdapterSheetMenu;
    this.rootSheetMain = rootSheetMain;
    this.textSheetMenu = textSheetMenu;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static AdapterSheetMenuLightBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static AdapterSheetMenuLightBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.adapter_sheet_menu_light, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static AdapterSheetMenuLightBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.img_sheet_menu;
      ImageView imgSheetMenu = ViewBindings.findChildViewById(rootView, id);
      if (imgSheetMenu == null) {
        break missingId;
      }

      id = R.id.ll_adapter_sheet_menu;
      LinearLayout llAdapterSheetMenu = ViewBindings.findChildViewById(rootView, id);
      if (llAdapterSheetMenu == null) {
        break missingId;
      }

      LinearLayout rootSheetMain = (LinearLayout) rootView;

      id = R.id.text_sheet_menu;
      TextView textSheetMenu = ViewBindings.findChildViewById(rootView, id);
      if (textSheetMenu == null) {
        break missingId;
      }

      return new AdapterSheetMenuLightBinding((LinearLayout) rootView, imgSheetMenu,
          llAdapterSheetMenu, rootSheetMain, textSheetMenu);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
