// Generated by view binder compiler. Do not edit!
package com.saphamrah.customer.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.saphamrah.customer.R;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class LayoutDrawerHeaderBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView imageView;

  @NonNull
  public final CircleImageView imgProfile;

  @NonNull
  public final ConstraintLayout layoutDrawerHeader;

  @NonNull
  public final TextView nameForshomdehTxt;

  @NonNull
  public final TextView roleForshomdehTxt;

  private LayoutDrawerHeaderBinding(@NonNull ConstraintLayout rootView,
      @NonNull ImageView imageView, @NonNull CircleImageView imgProfile,
      @NonNull ConstraintLayout layoutDrawerHeader, @NonNull TextView nameForshomdehTxt,
      @NonNull TextView roleForshomdehTxt) {
    this.rootView = rootView;
    this.imageView = imageView;
    this.imgProfile = imgProfile;
    this.layoutDrawerHeader = layoutDrawerHeader;
    this.nameForshomdehTxt = nameForshomdehTxt;
    this.roleForshomdehTxt = roleForshomdehTxt;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static LayoutDrawerHeaderBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LayoutDrawerHeaderBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.layout_drawer_header, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LayoutDrawerHeaderBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.imageView;
      ImageView imageView = ViewBindings.findChildViewById(rootView, id);
      if (imageView == null) {
        break missingId;
      }

      id = R.id.imgProfile;
      CircleImageView imgProfile = ViewBindings.findChildViewById(rootView, id);
      if (imgProfile == null) {
        break missingId;
      }

      ConstraintLayout layoutDrawerHeader = (ConstraintLayout) rootView;

      id = R.id.name_forshomdeh_txt;
      TextView nameForshomdehTxt = ViewBindings.findChildViewById(rootView, id);
      if (nameForshomdehTxt == null) {
        break missingId;
      }

      id = R.id.role_forshomdeh_txt;
      TextView roleForshomdehTxt = ViewBindings.findChildViewById(rootView, id);
      if (roleForshomdehTxt == null) {
        break missingId;
      }

      return new LayoutDrawerHeaderBinding((ConstraintLayout) rootView, imageView, imgProfile,
          layoutDrawerHeader, nameForshomdehTxt, roleForshomdehTxt);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
