// Generated by view binder compiler. Do not edit!
package com.saphamrah.customer.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.saphamrah.customer.R;
import com.saphamrah.customer.utils.customViews.EditTextWatcher;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class PurchaseBottomsheetBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final EditTextWatcher TVCount;

  @NonNull
  public final ImageView addToCart;

  @NonNull
  public final LinearLayout linBottomSheet;

  @NonNull
  public final LinearLayout linDetailsView;

  @NonNull
  public final LinearLayout linPurchase;

  @NonNull
  public final LinearLayout linPurchaseCount;

  @NonNull
  public final LinearLayout linTitleView;

  @NonNull
  public final ImageView removeFromCart;

  @NonNull
  public final TextView txtBachNumber;

  @NonNull
  public final TextView txtConsumerPrice;

  @NonNull
  public final TextView txtExpirationDate;

  @NonNull
  public final TextView txtInventory;

  @NonNull
  public final TextView txtProductName;

  @NonNull
  public final TextView txtProductionDate;

  @NonNull
  public final TextView txtSellPrice;

  private PurchaseBottomsheetBinding(@NonNull LinearLayout rootView,
      @NonNull EditTextWatcher TVCount, @NonNull ImageView addToCart,
      @NonNull LinearLayout linBottomSheet, @NonNull LinearLayout linDetailsView,
      @NonNull LinearLayout linPurchase, @NonNull LinearLayout linPurchaseCount,
      @NonNull LinearLayout linTitleView, @NonNull ImageView removeFromCart,
      @NonNull TextView txtBachNumber, @NonNull TextView txtConsumerPrice,
      @NonNull TextView txtExpirationDate, @NonNull TextView txtInventory,
      @NonNull TextView txtProductName, @NonNull TextView txtProductionDate,
      @NonNull TextView txtSellPrice) {
    this.rootView = rootView;
    this.TVCount = TVCount;
    this.addToCart = addToCart;
    this.linBottomSheet = linBottomSheet;
    this.linDetailsView = linDetailsView;
    this.linPurchase = linPurchase;
    this.linPurchaseCount = linPurchaseCount;
    this.linTitleView = linTitleView;
    this.removeFromCart = removeFromCart;
    this.txtBachNumber = txtBachNumber;
    this.txtConsumerPrice = txtConsumerPrice;
    this.txtExpirationDate = txtExpirationDate;
    this.txtInventory = txtInventory;
    this.txtProductName = txtProductName;
    this.txtProductionDate = txtProductionDate;
    this.txtSellPrice = txtSellPrice;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static PurchaseBottomsheetBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static PurchaseBottomsheetBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.purchase_bottomsheet, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static PurchaseBottomsheetBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.TV_count;
      EditTextWatcher TVCount = ViewBindings.findChildViewById(rootView, id);
      if (TVCount == null) {
        break missingId;
      }

      id = R.id.add_to_cart;
      ImageView addToCart = ViewBindings.findChildViewById(rootView, id);
      if (addToCart == null) {
        break missingId;
      }

      LinearLayout linBottomSheet = (LinearLayout) rootView;

      id = R.id.lin_details_view;
      LinearLayout linDetailsView = ViewBindings.findChildViewById(rootView, id);
      if (linDetailsView == null) {
        break missingId;
      }

      id = R.id.lin_purchase;
      LinearLayout linPurchase = ViewBindings.findChildViewById(rootView, id);
      if (linPurchase == null) {
        break missingId;
      }

      id = R.id.lin_purchaseCount;
      LinearLayout linPurchaseCount = ViewBindings.findChildViewById(rootView, id);
      if (linPurchaseCount == null) {
        break missingId;
      }

      id = R.id.lin_title_view;
      LinearLayout linTitleView = ViewBindings.findChildViewById(rootView, id);
      if (linTitleView == null) {
        break missingId;
      }

      id = R.id.remove_from_cart;
      ImageView removeFromCart = ViewBindings.findChildViewById(rootView, id);
      if (removeFromCart == null) {
        break missingId;
      }

      id = R.id.txt_bach_number;
      TextView txtBachNumber = ViewBindings.findChildViewById(rootView, id);
      if (txtBachNumber == null) {
        break missingId;
      }

      id = R.id.txt_consumer_price;
      TextView txtConsumerPrice = ViewBindings.findChildViewById(rootView, id);
      if (txtConsumerPrice == null) {
        break missingId;
      }

      id = R.id.txt_expiration_date;
      TextView txtExpirationDate = ViewBindings.findChildViewById(rootView, id);
      if (txtExpirationDate == null) {
        break missingId;
      }

      id = R.id.txt_inventory;
      TextView txtInventory = ViewBindings.findChildViewById(rootView, id);
      if (txtInventory == null) {
        break missingId;
      }

      id = R.id.txt_product_name;
      TextView txtProductName = ViewBindings.findChildViewById(rootView, id);
      if (txtProductName == null) {
        break missingId;
      }

      id = R.id.txt_production_date;
      TextView txtProductionDate = ViewBindings.findChildViewById(rootView, id);
      if (txtProductionDate == null) {
        break missingId;
      }

      id = R.id.txt_sell_price;
      TextView txtSellPrice = ViewBindings.findChildViewById(rootView, id);
      if (txtSellPrice == null) {
        break missingId;
      }

      return new PurchaseBottomsheetBinding((LinearLayout) rootView, TVCount, addToCart,
          linBottomSheet, linDetailsView, linPurchase, linPurchaseCount, linTitleView,
          removeFromCart, txtBachNumber, txtConsumerPrice, txtExpirationDate, txtInventory,
          txtProductName, txtProductionDate, txtSellPrice);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
