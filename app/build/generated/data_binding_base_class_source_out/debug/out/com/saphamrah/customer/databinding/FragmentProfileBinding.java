// Generated by view binder compiler. Do not edit!
package com.saphamrah.customer.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.saphamrah.customer.R;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentProfileBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final LinearLayout addressLl;

  @NonNull
  public final LinearLayout etebarLl;

  @NonNull
  public final LinearLayout hesabLl;

  @NonNull
  public final CircleImageView imgProfile;

  @NonNull
  public final LinearLayout personalInfoLl;

  private FragmentProfileBinding(@NonNull LinearLayout rootView, @NonNull LinearLayout addressLl,
      @NonNull LinearLayout etebarLl, @NonNull LinearLayout hesabLl,
      @NonNull CircleImageView imgProfile, @NonNull LinearLayout personalInfoLl) {
    this.rootView = rootView;
    this.addressLl = addressLl;
    this.etebarLl = etebarLl;
    this.hesabLl = hesabLl;
    this.imgProfile = imgProfile;
    this.personalInfoLl = personalInfoLl;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentProfileBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentProfileBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_profile, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentProfileBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.address_ll;
      LinearLayout addressLl = ViewBindings.findChildViewById(rootView, id);
      if (addressLl == null) {
        break missingId;
      }

      id = R.id.etebar_ll;
      LinearLayout etebarLl = ViewBindings.findChildViewById(rootView, id);
      if (etebarLl == null) {
        break missingId;
      }

      id = R.id.hesab_ll;
      LinearLayout hesabLl = ViewBindings.findChildViewById(rootView, id);
      if (hesabLl == null) {
        break missingId;
      }

      id = R.id.imgProfile;
      CircleImageView imgProfile = ViewBindings.findChildViewById(rootView, id);
      if (imgProfile == null) {
        break missingId;
      }

      id = R.id.personal_info_ll;
      LinearLayout personalInfoLl = ViewBindings.findChildViewById(rootView, id);
      if (personalInfoLl == null) {
        break missingId;
      }

      return new FragmentProfileBinding((LinearLayout) rootView, addressLl, etebarLl, hesabLl,
          imgProfile, personalInfoLl);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
